using Godot;
using System;

using System.Threading.Tasks;

// Calculates heart rate from gyroscope and accelerometer samples

[GlobalClass]
public partial class HeartRateAlgorithm : GodotObject {
	
	public static Godot.Collections.Dictionary Analyze(Godot.Collections.Array<Vector3> accel, Godot.Collections.Array<Vector3> gyro, bool debugOutput) {
		return SignalHelper.FindRate(accel, gyro, 50, 130, BallistocardiographyFilter, debugOutput);
	}
	
	public static int GetActualSampleSize(int outputSampleSize) {
		return outputSampleSize + BallistocardiographyFilter.Length;
	}
	
	public static readonly double[] BallistocardiographyFilter = {
	  0.011242603325458032,
	  0.005157445306135791,
	  -0.020243957295231565,
	  -0.04978418439707147,
	  -0.05146734321980074,
	  -0.01933178738540511,
	  0.012640423434563376,
	  0.011369390979624056,
	  -0.011331746140377533,
	  -0.016553072765213617,
	  0.004257531843301175,
	  0.017474649529860043,
	  0.0011303410151159996,
	  -0.018414952362707314,
	  -0.007667784656641857,
	  0.017740965170233994,
	  0.014966746863089552,
	  -0.014919554924280648,
	  -0.022854933676013246,
	  0.009199513327732544,
	  0.030957851170445427,
	  0.0004909554223186425,
	  -0.038658009901164324,
	  -0.015813873351272083,
	  0.04542105330550204,
	  0.04102319656541392,
	  -0.05069028461842269,
	  -0.09190143428973485,
	  0.054052369911113604,
	  0.31347691405141814,
	  0.44480805498222264,
	  0.31347691405141814,
	  0.054052369911113604,
	  -0.09190143428973485,
	  -0.05069028461842269,
	  0.04102319656541392,
	  0.04542105330550204,
	  -0.015813873351272083,
	  -0.038658009901164324,
	  0.0004909554223186425,
	  0.030957851170445427,
	  0.009199513327732544,
	  -0.022854933676013246,
	  -0.014919554924280648,
	  0.014966746863089552,
	  0.017740965170233994,
	  -0.007667784656641857,
	  -0.018414952362707314,
	  0.0011303410151159996,
	  0.017474649529860043,
	  0.004257531843301175,
	  -0.016553072765213617,
	  -0.011331746140377533,
	  0.011369390979624056,
	  0.012640423434563376,
	  -0.01933178738540511,
	  -0.05146734321980074,
	  -0.04978418439707147,
	  -0.020243957295231565,
	  0.005157445306135791,
	  0.011242603325458032
	};
}
